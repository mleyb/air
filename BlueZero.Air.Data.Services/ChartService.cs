using GoogleChartSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BlueZero.Air.Data.Services
{
    public class ChartService : DataService, IChartService
    {
        public ChartService(IDataContext db) : base(db) { }

        public async Task<string> GeneratePieChart()
        {
            int[] data = new int[] { 10, 20, 30, 40 };

            // Specify that this is a 3D Pie Chart
            PieChart chart = new PieChart(400, 300, PieChartType.TwoD);
            chart.SetTitle("Pie Chart");
            chart.SetData(data);

            // Label each slice in the same order as the dataset
            chart.SetPieChartLabels(new string[] { "A", "B", "C", "D" });

            // Optional - We can specify a color for each item of data or
            // if we specify fewer colors they are interpolated
            chart.SetDatasetColors(new string[] { "0000FF" });

            return await Task.Run(() => chart.GetUrl());
        }

        public async Task<string> GenerateBarChart()
        {
            int[] data1 = new int[] { 10, 5, 20 };
            int[] data2 = new int[] { 30, 35, 15 };

            List<int[]> datasets = new List<int[]>();
            datasets.Add(data1);
            datasets.Add(data2);

            BarChart chart = new BarChart(600, 450, BarChartOrientation.Vertical, BarChartStyle.Grouped);
            chart.SetTitle("Bar Chart");
            chart.AddAxis(new ChartAxis(ChartAxisType.Bottom));
            chart.AddAxis(new ChartAxis(ChartAxisType.Left));
            chart.SetData(datasets);

            chart.SetDatasetColors(new string[] { "FF0000", "00AA00" });

            return await Task.Run(() => chart.GetUrl());
        }

        public async Task<string> GenerateLineChart()
        {
            int[] data = new int[] { 40, 30, 20, 10, 0 };

            LineChart chart = new LineChart(600, 450);
            chart.SetTitle("Line Chart");
            chart.SetData(data);

            /*
            Create an axis along the bottom of the graph
            Labels will be automatically generated by the API using the range values.
            */
            ChartAxis bottomAxis = new ChartAxis(ChartAxisType.Bottom);
            bottomAxis.SetRange(0, 500);
            bottomAxis.Color = "00FF00";
            bottomAxis.FontSize = 14;
            chart.AddAxis(bottomAxis);

            /* 
            Create an axis along the top of the graph
            This time we specify the labels ("text", position)
            The default range for an axis is 0-100
            */
            ChartAxis topAxis = new ChartAxis(ChartAxisType.Top);
            topAxis.AddLabel(new ChartAxisLabel("one", 0));
            topAxis.AddLabel(new ChartAxisLabel("two", 75));
            topAxis.AddLabel(new ChartAxisLabel("three", 100));
            chart.AddAxis(topAxis);

            return await Task.Run(() => chart.GetUrl());
        }
    }
}
